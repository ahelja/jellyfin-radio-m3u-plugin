name: Build and Release

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'RadioM3U/RadioM3U.csproj'
      - 'manifest.json'

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Get project info
        id: get_project_info
        run: |
          echo "name=$(basename RadioM3U/RadioM3U.csproj .csproj)" >> $GITHUB_OUTPUT
          echo "version=$(grep -o '<Version>[^<]*</Version>' RadioM3U/RadioM3U.csproj | sed 's/<Version>\(.*\)<\/Version>/\1/')" >> $GITHUB_OUTPUT

      - name: Clear NuGet cache
        run: dotnet nuget locals all --clear

      - name: Restore dependencies
        run: dotnet restore RadioM3U/RadioM3U.csproj
        
      - name: Update manifest
        run: |
          chmod +x ./update-manifest.sh
          ./update-manifest.sh

      - name: Build
        run: dotnet build RadioM3U/RadioM3U.csproj --configuration Release --no-restore

      - name: Package plugin
        run: |
          mkdir -p "dist/${{ steps.get_project_info.outputs.name }}"
          cp "RadioM3U/bin/Release/net8.0/${{ steps.get_project_info.outputs.name }}.dll" "dist/${{ steps.get_project_info.outputs.name }}/"
          cp "RadioM3U/bin/Release/net8.0/${{ steps.get_project_info.outputs.name }}.pdb" "dist/${{ steps.get_project_info.outputs.name }}/"
          cp manifest.json "dist/${{ steps.get_project_info.outputs.name }}/"
          cd dist
          ZIP_NAME="${{ steps.get_project_info.outputs.name }}_v${{ steps.get_project_info.outputs.version }}.zip"
          zip -r "$ZIP_NAME" "${{ steps.get_project_info.outputs.name }}"
          cd ..
          sha256sum "dist/${{ steps.get_project_info.outputs.name }}_v${{ steps.get_project_info.outputs.version }}.zip" > "dist/${{ steps.get_project_info.outputs.name }}_v${{ steps.get_project_info.outputs.version }}.zip.sha256sum"
          echo "zip_name=${{ steps.get_project_info.outputs.name }}_v${{ steps.get_project_info.outputs.version }}.zip" >> $GITHUB_ENV

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          name: "Release v${{ steps.get_project_info.outputs.version }}"
          tag_name: "v${{ steps.get_project_info.outputs.version }}"
          files: |
            dist/${{ steps.get_project_info.outputs.name }}_v${{ steps.get_project_info.outputs.version }}.zip
            dist/${{ steps.get_project_info.outputs.name }}_v${{ steps.get_project_info.outputs.version }}.zip.sha256sum