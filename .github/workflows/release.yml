name: Build & Release RadioM3U

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Set VERSION from tag
        run: echo "VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV
        shell: bash

      - name: Restore
        run: dotnet restore RadioM3U/RadioM3U.csproj

      - name: Build Release
        run: dotnet build -c Release RadioM3U/RadioM3U.csproj

      - name: Package
        run: |
          cd RadioM3U/bin/Release/net8.0
          zip -9 RadioM3U_${VERSION}.zip RadioM3U.dll
          shasum -a 256 RadioM3U_${VERSION}.zip | awk '{print $1}' > sha256.txt
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: |
            RadioM3U/bin/Release/net8.0/RadioM3U_${{ env.VERSION }}.zip
            RadioM3U/bin/Release/net8.0/sha256.txt

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout tag
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Set VERSION from tag
        run: echo "VERSION=${GITHUB_REF_NAME#v}" >> $GITHUB_ENV
        shell: bash

      - name: Read checksum
        id: sum
        run: echo "sha=$(cat dist/sha256.txt)" >> $GITHUB_OUTPUT
        shell: bash

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/RadioM3U_${{ env.VERSION }}.zip
          generate_release_notes: true

      - name: Set timestamp
        run: echo "STAMP=$(date -u +%Y-%m-%dT%H:%M:%SZ)" >> $GITHUB_ENV
        shell: bash

      - name: Switch to default branch
        run: |
          DEFAULT_BRANCH="${{ github.event.repository.default_branch }}"
          git checkout "$DEFAULT_BRANCH"
        shell: bash

      - name: Update manifest.json
        uses: DamianReeves/write-file-action@v1.3
        with:
          path: RadioM3U/manifest.json
          contents: |
            {
              "name": "RadioM3U Repository",
              "description": "Repository per il plugin RadioM3U che importa playlist M3U come stazioni radio.",
              "manifestVersion": 1,
              "timestamp": "${{ env.STAMP }}",
              "plugins": [
                {
                  "name": "RadioM3U",
                  "guid": "f5c7a89d-107b-4c2f-9f17-6b6540b8e3e8",
                  "version": "${{ env.VERSION }}",
                  "targetAbi": "10.9.0.0",
                  "framework": "net8.0",
                  "overview": "Importa playlist M3U e crea stazioni radio con cover.",
                  "description": "Importa una playlist .m3u e genera cartelle per gruppo con file .strm, immagini e metadata.",
                  "category": "Music",
                  "owner": "${{ github.repository_owner }}",
                  "imageUrl": "https://raw.githubusercontent.com/${{ github.repository }}/${{ github.event.repository.default_branch }}/01.png",
                  "sourceUrl": "https://github.com/${{ github.repository }}",
                  "changelog": "https://github.com/${{ github.repository }}/releases",
                  "assets": [
                    {
                      "name": "RadioM3U",
                      "version": "${{ env.VERSION }}",
                      "targetAbi": "10.9.0.0",
                      "runtime": "any",
                      "rid": "any",
                      "assetUrl": "https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/RadioM3U_${{ env.VERSION }}.zip",
                      "checksum": "SHA256:${{ steps.sum.outputs.sha }}"
                    }
                  ]
                }
              ]
            }
          write-mode: overwrite

      - name: Commit manifest
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add RadioM3U/manifest.json
          git commit -m "chore: update manifest for ${{ github.ref_name }}" || echo "No changes"
          git push
        shell: bash
